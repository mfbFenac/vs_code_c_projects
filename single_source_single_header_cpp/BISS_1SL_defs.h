/*
 * Software and its documentation is provided by iC-Haus GmbH or contributors "AS IS" and is
 * subject to the ZVEI General Conditions for the Supply of Products and Services with iC-Haus
 * amendments and the ZVEI Software clause with iC-Haus amendments (http://www.ichaus.de/EULA).
 */

#ifndef BISS_1SL_DEFS_H
#define BISS_1SL_DEFS_H

enum BISS_ErrorEnum{
	eBISS_OK,
	eBISS_INVALID_HANDLE,
	eBISS_INTERFACEDRIVER_NOT_FOUND,
	eBISS_INTERFACE_NOT_FOUND,
	eBISS_INVALID_INTERFACE,
	eBISS_INVALID_PARAMETER,
	eBISS_INVALID_ADDRESS,
	eBISS_INVALID_VALUE,
	eBISS_USB_ERROR,
	eBISS_FILE_NOT_FOUND,
	eBISS_INVALID_FILE,
	eBISS_VERIFY_FAILED,
	eBISS_MASTERCOMM_FAILED,
	eBISS_TIMEOUT,
	eBISS_REGERROR,
	eBISS_COMM_FAILED,
	eBISS_INVALID_NUMBEROFBYTES,
	eBISS_AGS_FAILED,
	eBISS_USB_HIGHSPEED_WARNING,
	eBISS_USB_DATA_LOSS,
	eBISS_FILE_ACCESS_DENIED,
	eBISS_EDS_UNDEFINED,
	eBISS_INVALID_EDS,
	eBISS_INVALID_EDS_CHKSUM,
	eBISS_REG_COMM_FAILED,
	eBISS_INVALID_NUMBER_OF_DATACHANNELS,
	eBISS_BLM_ERROR,
	eBISS_OUT_OF_MEMORY
};

enum BISS_InterfaceEnum {
	eBISS_NO_INTERFACE = 0,
    eBISS_INTERFACE_RESERVED_1,
    eBISS_INTERFACE_RESERVED_2,
    eBISS_INTERFACE_RESERVED_3,
	eBISS_MB3U = 4,
	eBISS_MB4U,
	eBISS_MB5U,
	eBISS_INTERFACE_RESERVED_7,
    eBISS_INTERFACE_RESERVED_8,
	eMFB_enum_son_numara,
};

enum BISS_ProtocolEnum {
	eBISS_PROTOCOL_C,
	eBISS_DISABLE_CDS,
	eBISS_PROTOCOL_SSI
};

enum BISS_ComParamEnum {
    eBISS_MASTER_VERSION,
    eBISS_MASTER_REVISION,
    eBISS_PROTOCOL,
    eBISS_CLKENI,
    eBISS_FREQ_SCD,
    eBISS_FREQ_REG,
    eBISS_FREQ_AGS,
    eBISS_SLAVE_ID,
    eBISS_REGISTER_ADDRESS,
    eBISS_WNR,
    eBISS_REGISTER_VALUE,
    eBISS_SSIWRITE,
    eBISS_SSIWRITE_TIMEOUT,
    eBISS_MAX_DATACH_CNT,
    eBISS_MAX_REG_CNT,
    eBISS_EN_MO,
    eBISS_FREQ_AGS_REG,
    eBISS_EDS_BANK,
    eBISS_DISABLE_TIMEOUT,
    eBISS_ENABLE_TTL,
    eBISS_NUMBER_OF_DATACHANNELS,
    eBISS_SSIWRITE_DL,
    eBISS_SLAVELOC,
    eBISS_HOLD_CDM
};

enum BISS_FrameParamEnum {
	eBISS_SCD_LENGTH, eBISS_SCD_CRC_POLY, eBISS_SCD_CRC_INVERT,
	eBISS_SCD_CONTENT_COUNT,
	eBISS_RESERVED, eBISS_SLAVEID, eBISS_IDCOUNT, eBISS_CRCS, eBISS_GRAYS, eBISS_GRAY_MSB, eBISS_GRAY_LSB,
	eBISS_CRC_CLOSING_VALUE
};

enum BISS_ReservedParamEnum {
	eBISS_ENABLE_AGS, eBISS_SLAVE_COUNT, eBISS_SCD_LENGTH_OLD,
	eBISS_BISSVER, eBISS_ENABLE_SSI, eBISS_ENABLE_BISSMOD,
	eBISS_ENABLE_AKTOR, eBISS_ENABLE_GRAY,
	eBISS_CRCID
};

enum BISS_InterfaceInfoEnum {
	eBISS_SERIAL_NUMBER,
	eBISS_DRIVER_VERSION
};

typedef struct {
 	unsigned long ulZero;
	unsigned long ulDataLength;
	unsigned long ulResolution;
	long lOffset;
}BISS_ScdContentStruct;

enum BISS_EdsParamEnum {
	eBISS_EDS_EDS_VER, eBISS_EDS_EDS_LEN, eBISS_EDS_USR_STA, eBISS_EDS_USR_END, 
	eBISS_EDS_TMA, eBISS_EDS_TO_MIN, eBISS_EDS_TO_MAX, eBISS_EDS_TOS_MIN, eBISS_EDS_TOS_MAX, eBISS_EDS_TCLK_MIN, eBISS_EDS_TCLK_MAX, eBISS_EDS_TCYC,
	eBISS_EDS_TBUSY_S, eBISS_EDS_BUSY_S, eBISS_EDS_PON_DLY, eBISS_EDS_DC_NUM, eBISS_EDS_SL_NUM, eBISS_EDS_SL_OFF,
	eBISS_EDS_BANK1, eBISS_EDS_DLEN1, eBISS_EDS_FORMAT1_STOP, eBISS_EDS_FORMAT1_ALIGN, eBISS_EDS_FORMAT1_TYPE, eBISS_EDS_CPOLY1,
	eBISS_EDS_BANK2, eBISS_EDS_DLEN2, eBISS_EDS_FORMAT2_STOP, eBISS_EDS_FORMAT2_ALIGN, eBISS_EDS_FORMAT2_TYPE, eBISS_EDS_CPOLY2,
	eBISS_EDS_BANK3, eBISS_EDS_DLEN3, eBISS_EDS_FORMAT3_STOP, eBISS_EDS_FORMAT3_ALIGN, eBISS_EDS_FORMAT3_TYPE, eBISS_EDS_CPOLY3,
	eBISS_EDS_BANK4, eBISS_EDS_DLEN4, eBISS_EDS_FORMAT4_STOP, eBISS_EDS_FORMAT4_ALIGN, eBISS_EDS_FORMAT4_TYPE, eBISS_EDS_CPOLY4,
	eBISS_EDS_BANK5, eBISS_EDS_DLEN5, eBISS_EDS_FORMAT5_STOP, eBISS_EDS_FORMAT5_ALIGN, eBISS_EDS_FORMAT5_TYPE, eBISS_EDS_CPOLY5,
	eBISS_EDS_BANK6, eBISS_EDS_DLEN6, eBISS_EDS_FORMAT6_STOP, eBISS_EDS_FORMAT6_ALIGN, eBISS_EDS_FORMAT6_TYPE, eBISS_EDS_CPOLY6,
	eBISS_EDS_BANK7, eBISS_EDS_DLEN7, eBISS_EDS_FORMAT7_STOP, eBISS_EDS_FORMAT7_ALIGN, eBISS_EDS_FORMAT7_TYPE, eBISS_EDS_CPOLY7,
	eBISS_EDS_BANK8, eBISS_EDS_DLEN8, eBISS_EDS_FORMAT8_STOP, eBISS_EDS_FORMAT8_ALIGN, eBISS_EDS_FORMAT8_TYPE, eBISS_EDS_CPOLY8,
	eBISS_EDS_BC_OFF,
	eBISS_EDS_BP_VER, eBISS_EDS_BP_LEN, eBISS_EDS_BP_ID, eBISS_EDS_FB1, eBISS_EDS_FB2, 
	eBISS_EDS_PON_PDL, eBISS_EDS_EN_TYP, eBISS_EDS_POS_NUM,
	eBISS_EDS_MT_LEN, eBISS_EDS_MT_FMT, eBISS_EDS_CO_LEN, eBISS_EDS_CO_FMT, eBISS_EDS_FI_LEN, eBISS_EDS_FI_FMT,
	eBISS_EDS_MT_CNT, eBISS_EDS_SIP_CNT, eBISS_EDS_SIP_RES, eBISS_EDS_CPOLY, eBISS_EDS_CSTART,
	eBISS_EDS_ABS_ACU, eBISS_EDS_REL_ACU, eBISS_EDS_SPD_ACU, eBISS_EDS_HYST,
	eBISS_EDS_SPD_MAX, eBISS_EDS_ACC_MAX, eBISS_EDS_TMP_MIN, eBISS_EDS_TMP_MAX,
	eBISS_EDS_VLT_MIN, eBISS_EDS_VLT_MAX, eBISS_EDS_CUR_MAX
};

enum BISS_ErrorTypeEnum{
	eBISS_NONE,
	eBISS_HINT,
	eBISS_WARNING,
	eBISS_PROGRAMMING_ERROR,
	eBISS_OPERATING_ERROR,
	eBISS_COMMUNICATION_ERROR
	};


#endif //BISS_1SL_DEFS_H